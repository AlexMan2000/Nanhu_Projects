{{HEAD_COMMENT}}
package {{PACKAGE_ID}};

import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.Color;
import android.graphics.PorterDuff;
import android.graphics.Typeface;
import android.graphics.drawable.ColorDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v13.app.FragmentPagerAdapter;
import android.support.v4.content.ContextCompat;
import android.support.v4.view.ViewPager;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.text.Layout;
import android.text.SpannableString;
import android.text.Spanned;
import android.text.style.AlignmentSpan;
import android.text.style.ForegroundColorSpan;
import android.text.style.ImageSpan;
import android.text.style.StyleSpan;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import {{PACKAGE_ID}}.R;

public class {{FRAGMENT_NAME}} extends Fragment {

    /**
     * The {@link android.support.v4.view.PagerAdapter} that will provide
     * fragments for each of the sections. We use a
     * {@link FragmentPagerAdapter} derivative, which will keep every
     * loaded fragment in memory. If this becomes too memory intensive, it
     * may be best to switch to a
     * {@link android.support.v13.app.FragmentStatePagerAdapter}.
     */
    {{FRAGMENT_NAME}}PagerAdapter mPagerAdapter;

    /**
     * The {@link ViewPager} that will host the section contents.
     */
    ViewPager mViewPager;
{{PRIVATE_IVARS}}
    public {{FRAGMENT_NAME}}() {  // fragment must have a constructor
    }

    public void goToNextPage() {
        int numPages = mViewPager.getAdapter().getCount();
        int idx = mViewPager.getCurrentItem();
        if (idx < numPages - 1) {
            mViewPager.setCurrentItem(idx + 1, true);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        final View rootView = inflater.inflate(R.layout.fragment_{{FRAGMENT_NAME_UNDERSCORED}}, container, false);
{{ACTION_BAR_INIT}}
        mPagerAdapter = new {{FRAGMENT_NAME}}PagerAdapter(getFragmentManager());

        mViewPager = (ViewPager) rootView.findViewById(R.id.{{FRAGMENT_NAME_UNDERSCORED}}_viewpager);
        mViewPager.setAdapter(mPagerAdapter);

        mViewPager.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageSelected(int i) {
{{ON_PAGE_SELECTED_CODE}}
            }

            @Override
            public void onPageScrolled(int i, float v, int i2) {
            }

            @Override
            public void onPageScrollStateChanged(int i) {
            }
        });
{{ADDITIONAL_ON_CREATE_CODE}}
        return rootView;
    }

    /**
     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
     * one of the sections/tabs/pages.
     */
    public class {{FRAGMENT_NAME}}PagerAdapter extends FragmentPagerAdapter {

        public {{FRAGMENT_NAME}}PagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
            {{PAGER_ADAPTER_GETITEM_METHOD_BODY}}
        }

        @Override
        public int getCount() {
            return {{NUMBER_OF_PAGES}};
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return "";
        }
    }
{{ADDITIONAL_METHODS}}
}
